import time
from aiogram.dispatcher.filters.state import StatesGroup, State
from custom_moduls.database.sqliteclass import Database
from aiogram.dispatcher import FSMContext
from aiogram.utils.callback_data import *
from Module import dp, KB
import custom_moduls.admin.list_of_colums
import re
<<<<<<< HEAD
from custom_moduls.user.User_line import User_FSM
=======

>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
a = Database("Dolg_bot_bd")


class Admin_FSM(StatesGroup):
	catching_text = State()
	cheking_data = State()
	course = State()
	change_option = State()
	type_set = State()
	cost_it = State()
	schedule_it = State()
	room_it = State()
	teacher_it = State()
	comment_it = State()
	set_subjects = State()  # –í–∫–ª—é—á–∏—Ç—å\–≤—ã–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫–∏
	set_status_on = State()
	set_status_off = State()
	set_answer_on = State()
	set_answer_off = State()


async def cmd_cancel(message: types.Message, state=FSMContext):
	await state.finish()
async def back(message: types.Message, state= FSMContext):
	await Admin_FSM.set_subjects.set()
	await message.answer("–í—ã–±–µ—Ä–∏ —Ç–∏–ø –∫—É—Ä—Å–æ–≤!", reply_markup=KB.on_off)
	await message.answer("–í–µ—Ä–Ω–∏—Å—å –Ω–∞–∑–∞–¥! üëâüèª/menuüëàüèª")
async def menu(message: types.Message, state= FSMContext):
	await Admin_FSM.course.set()
	await message.answer("–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=KB.–°ourse)

async def came_data(callback: types.CallbackQuery, state=Admin_FSM.catching_text):
	async with state.proxy() as data:
		data["button"] = callback.data
		data["data_id"] = callback.from_user.id
	await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å!")
	await Admin_FSM.cheking_data.set()

async def coming_text(message: types.Message, state=Admin_FSM.cheking_data):
	async with state.proxy() as data:
		data["message"] = message.text
	if data["message"] == a.get_pass(message.from_user.id)[0]:
		await message.answer("–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –ø–∞—Ä–æ–ª—å, –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –¥–∞–ª—å—à–µ!", reply_markup=KB.–°ourse)
		await Admin_FSM.course.set()
	else:
		await message.answer("–ù–ï–í–ï–†–ù–´–ô –ü–ê–†–û–õ–¨!!\n–í–≤–µ–¥–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏–ª–∏ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç!", reply_markup=KB.Menu_return)


async def cours_type(callback: types.CallbackQuery, state=Admin_FSM.course):
	async with state.proxy() as data:
		data["button"] = callback.data
	if data["button"] == "open":
		await callback.message.edit_text("–°–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫—É—Ä—Å–æ–≤!", reply_markup=a.gen_off_on_subject_but()["on"])
		await Admin_FSM.change_option.set()
		await callback.message.answer("–í–µ—Ä–Ω–∏—Å—å –Ω–∞–∑–∞–¥! üëâüèª/menuüëàüèª")
	else:
		await callback.message.answer("–í—ã–±–µ—Ä–∏ —Ç–∏–ø –∫—É—Ä—Å–æ–≤!", reply_markup=KB.on_off)  # –í—ã–∑–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–∫—Ä—ã—Ç–∏—è\–æ—Ç–∫—Ä—ã—Ç–∏—è –∫—É—Ä—Å–æ–≤
		await Admin_FSM.set_subjects.set()
		await callback.message.answer("–ò–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –Ω–∞–∑–∞–¥! üëâüèª/menuüëàüèª")


# _________________–ù–ê–ü–ò–°–ê–ù–ò–ï –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –ò–ù–§–û–†–ú–ê–¶–ò–ò –û –ü–†–ï–î–ú–ï–¢–ê–•___________________
async def options(callback: types.CallbackQuery, state=Admin_FSM.change_option):
	async with state.proxy() as data:
		data['callback'] = callback.data
<<<<<<< HEAD
	await callback.message.edit_text(text="–í—ã–±–∏—Ä–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è!", reply_markup=custom_moduls.admin.list_of_colums.changing)
=======
	await callback.message.edit_text(text="–í—ã–±–∏—Ä–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è!",
	                                 reply_markup=custom_moduls.admin.list_of_colums.changing)
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
	await Admin_FSM.type_set.set()


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –°—Ç–æ–∏–º–æ—Å—Ç–∏
async def cost_set(callback: types.CallbackQuery, state=Admin_FSM.type_set):
	async with state.proxy() as data:
<<<<<<< HEAD
		data['data_option'] = callback.data
	result = a.select_info_subject(data['data_option'], "subject", data['callback'])
	await callback.message.answer(text=f"–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å!\n–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å {result} —Ä—É–±–ª–µ–π!")
=======
		data["data_option"] = callback.data
		print(data["data_option"])
	result = a.select_info_subject(data["data_option"], "subject", data['callback'])
	await callback.message.answer(text=f"–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å!\n–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å {result[0]} —Ä—É–±–ª–µ–π!")
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
	await Admin_FSM.cost_it.set()


async def cost_it(message: types.Message, state=Admin_FSM.cost_it):
	async with state.proxy() as data:
		data["text"] = message.text
	if re.fullmatch(r'\d{4,}', message.text):  # —Ü–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 4-—Ö –∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –ö–ê–ö –ü–†–ê–í–ò–õ–û!
		a.update_info(data['data_option'], message.text, data['callback'])
<<<<<<< HEAD
		result = a.select_info_subject(data['data_option'], "subject", data['callback'])
		await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –∫–æ—Å—Ç!, –¢–µ–ø–µ—Ä—å –µ–≥–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å {result} —Ä—É–±–ª–µ–π!")
		await message.answer(text="–í—ã–±–µ—Ä–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è!", reply_markup=custom_moduls.admin.list_of_colums.changing)
=======
		result = a.select_info_subject(data["data_option"], "subject", data['callback'])
		await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –∫–æ—Å—Ç!, –¢–µ–ø–µ—Ä—å –µ–≥–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å {result[0]} —Ä—É–±–ª–µ–π!")
		await message.answer(text="–í—ã–±–µ—Ä–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è!",
		                     reply_markup=custom_moduls.admin.list_of_colums.changing)
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
		await Admin_FSM.type_set.set()
	else:
		await message.answer("–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å!")


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã
async def schedule_set(callback: types.CallbackQuery, state=Admin_FSM.type_set):
	async with state.proxy() as data:
<<<<<<< HEAD
		data['data_option'] = callback.data
	result = a.select_info_subject(data['data_option'], "subject", data['callback'])
	await callback.message.answer(f"–í–≤–µ–¥–∏ –Ω–æ–≤—É—é –¥–∞—Ç—É!\n–î–∞—Ç–∞ –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å {result}!")
=======
		data["data_option"] = callback.data
	result = a.select_info_subject(data["data_option"], "subject", data['callback'])
	await callback.message.answer(f"–í–≤–µ–¥–∏ –Ω–æ–≤—É—é –¥–∞—Ç—É!\n–î–∞—Ç–∞ –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å {result[0]}!")
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
	await Admin_FSM.schedule_it.set()


async def schedule_it(message: types.Message, state=Admin_FSM.schedule_it):
	async with state.proxy() as data:
<<<<<<< HEAD
		data['text'] = message.text
	if re.fullmatch(r'(([0-2][1-9])|3+[0-1])+[.]+((0+[1-9])|[10-12])+[.]+(202+[3-8])', message.text):
		def formated_date(date):
			day, month, year = date.split(".")
			formatted_date = f"{year}.{month.zfill(2)}.{day.zfill(2)}"
			return formatted_date
		a.update_info(data['data_option'], formated_date(message.text), data['callback'])
		result = a.select_info_subject(data['data_option'], "subject", data['callback'])
		await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –¥–∞—Ç—É! –ö—É—Ä—Å –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è {result} —á–∏—Å–ª–∞!")
=======
		data["text"] = message.text
	if re.fullmatch(r'(([0-2][1-9])|3+[0-1])+[.]+((0+[1-9])|[10-12])+[.]+(202+[3-8])', message.text):
		a.update_info(data['data_option'], str(message.text), data['callback'])
		result = a.select_info_subject(data["data_option"], "subject", data['callback'])
		await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –¥–∞—Ç—É! –ö—É—Ä—Å –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è {result[0]} —á–∏—Å–ª–∞!")
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
		await message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è!", reply_markup=custom_moduls.admin.list_of_colums.changing)
		await Admin_FSM.type_set.set()
	else:
		await message.answer("–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–∞—Ç—É!")


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
async def room_set(callback: types.CallbackQuery, state=Admin_FSM.type_set):
	async with state.proxy() as data:
<<<<<<< HEAD
		data['data_option'] = callback.data
	result = a.select_info_subject(data['data_option'], "subject", data['callback'])
	await callback.message.answer(f"–í–≤–µ–¥–∏ –Ω–æ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é!\n–ê—É–¥–∏—Ç–æ—Ä–∏—è –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å {result}!")
=======
		data["data_option"] = callback.data
	result = a.select_info_subject(data["data_option"], "subject", data['callback'])
	await callback.message.answer(f"–í–≤–µ–¥–∏ –Ω–æ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é!\n–ê—É–¥–∏—Ç–æ—Ä–∏—è –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å {result[0]}!")
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
	await Admin_FSM.room_it.set()


async def room_it(message: types.Message, state=Admin_FSM.room_it):
	async with state.proxy() as data:
<<<<<<< HEAD
		data['text'] = message.text
	if re.fullmatch(r'\d{4}', message.text):
		a.update_info(data['data_option'], message.text, data['callback'])
		result = a.select_info_subject(data['data_option'], "subject", data['callback'])
		await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –Ω–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏! –ö—É—Ä—Å –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ ‚Ññ {result}!")
=======
		data["text"] = message.text
	if re.fullmatch(r'\d{4}', message.text):
		a.update_info(data['data_option'], message.text, data['callback'])
		result = a.select_info_subject(data["data_option"], "subject", data['callback'])
		await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –Ω–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏! –ö—É—Ä—Å –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ ‚Ññ {result[0]}!")
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
		await message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è!", reply_markup=custom_moduls.admin.list_of_colums.changing)
		await Admin_FSM.type_set.set()
	else:
		await message.answer("–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏!")


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
async def teacher_set(callback: types.CallbackQuery, state=Admin_FSM.type_set):
	async with state.proxy() as data:
<<<<<<< HEAD
		data['data_option'] = callback.data
	result = a.select_info_subject(data['data_option'], "subject", data['callback'])
	await callback.message.answer(f"–í–≤–µ–¥–∏ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è!\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å {result}!")
=======
		data["data_option"] = callback.data
	result = a.select_info_subject(data["data_option"], "subject", data['callback'])
	await callback.message.answer(f"–í–≤–µ–¥–∏ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è!\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å {result[0]}!")
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
	await Admin_FSM.teacher_it.set()


async def teacher_it(message: types.Message, state=Admin_FSM.teacher_it):
	async with state.proxy() as data:
		data["text"] = message.text
	if re.fullmatch(r'(\w{2,})+[ ]+(\w{2,})+[ ]+(\w{2,})', message.text):
		a.update_info(data['data_option'], message.text, data['callback'])
<<<<<<< HEAD
		result = a.select_info_subject(data['data_option'], "subject", data['callback'])
		await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è! –ö—É—Ä—Å –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å: {result}!")
=======
		result = a.select_info_subject(data["data_option"], "subject", data['callback'])
		await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è! –ö—É—Ä—Å –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å: {result[0]}!")
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
		await message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è!", reply_markup=custom_moduls.admin.list_of_colums.changing)
		await Admin_FSM.type_set.set()
	else:
		await message.answer("–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è!")


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
async def comment_set(callback: types.CallbackQuery, state=Admin_FSM.type_set):
	async with state.proxy() as data:
<<<<<<< HEAD
		data['data_option'] = callback.data
	result = a.select_info_subject(data['data_option'], "subject", data['callback'])
	await callback.message.answer(f"–í–≤–µ–¥–∏ –∫–æ–º–º–µ—Ç–∞—Ä–∏–π!\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å: {result}!")
=======
		data["data_option"] = callback.data
	result = a.select_info_subject(data["data_option"], "subject", data['callback'])
	await callback.message.answer(f"–í–≤–µ–¥–∏ –∫–æ–º–º–µ—Ç–∞—Ä–∏–π!\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∫—É—Ä—Å–∞ —Å–µ–π—á–∞—Å: {result[0]}!")
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
	await Admin_FSM.comment_it.set()


async def comment_it(message: types.Message, state=Admin_FSM.comment_it):
	async with state.proxy() as data:
		data["text"] = message.text
	a.update_info(data['data_option'], message.text, data['callback'])
<<<<<<< HEAD
	result = a.select_info_subject(data['data_option'], "subject", data['callback'])
	await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!\n{result}")
=======
	result = a.select_info_subject(data["data_option"], "subject", data['callback'])
	await message.answer(f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!\n{result[0]}")
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
	await message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è!", reply_markup=custom_moduls.admin.list_of_colums.changing)
	await Admin_FSM.type_set.set()


# –í—ã–±–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
async def set_list(callback: types.CallbackQuery, state=Admin_FSM.set_subjects):
	async with state.proxy() as data:
		data['set_List'] = callback.data
	if data['set_List'] == 'open_butt':
<<<<<<< HEAD
		await callback.message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ <b>–≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö</b>", reply_markup=a.gen_off_on_subject_but()["on"])
		await Admin_FSM.set_status_on.set()
		await callback.message.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–∏ üëâüèª/backüëàüèª")
	else:
		await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ <b>–≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö</b>", reply_markup=a.gen_off_on_subject_but()["off"])
=======
		await callback.message.edit_text(f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ <b>–≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö</b>", reply_markup=a.gen_off_on_subject_but()["on"])
		await Admin_FSM.set_status_on.set()
		await callback.message.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–∏ üëâüèª/backüëàüèª")
	else:
		await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ <b>–≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö</b>", reply_markup=a.gen_off_on_subject_but()["off"])
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
		await Admin_FSM.set_status_off.set()
		await callback.message.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–∏ üëâüèª/backüëàüèª")


async def set_status_on(callback: types.CallbackQuery, state=Admin_FSM.set_status_on):
	async with state.proxy() as data:
		data['subject_status'] = callback.data
<<<<<<< HEAD
	await callback.message.answer("–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å\–≤—ã–∫–ª—é—á–∏—Ç—å –∫—É—Ä—Å?", reply_markup=KB.yes_no)
=======
	await callback.message.edit_text("–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å\–≤—ã–∫–ª—é—á–∏—Ç—å –∫—É—Ä—Å?", reply_markup=KB.yes_no)
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
	await Admin_FSM.set_answer_on.set()


async def set_answer_on(callbck: types.CallbackQuery, state=Admin_FSM.set_answer_on):
	async with state.proxy() as data:
		data['answer'] = callbck.data
	if data['answer'] == 'ans_yes':
<<<<<<< HEAD
		a.update_subject_by_status('status', True, data['subject_status'])
		result = a.select_info_subject('status', 'subject', data['subject_status'])
		await callbck.message.answer(
=======
		a.update_info_status('status', True, data['subject_status'])
		result = a.select_info_subject('status', 'subject', data['subject_status'])
		await callbck.message.edit_text(
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
			f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å!\n –¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–º–µ—Ç–∞ {data['subject_status']}: {result[0]}",
			reply_markup=a.gen_off_on_subject_but()["on"])
		await Admin_FSM.set_status_on.set()
		await callbck.message.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–∏ üëâüèª/backüëàüèª")
	else:
<<<<<<< HEAD
		a.update_subject_by_status('status', False, data['subject_status'])
		result = a.select_info_subject('status', 'subject', data['subject_status'])
		await callbck.message.answer(
=======
		a.update_info_status('status', False, data['subject_status'])
		result = a.select_info_subject('status', 'subject', data['subject_status'])
		await callbck.message.edit_text(
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
			f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å!\n –¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–º–µ—Ç–∞ {data['subject_status']}: {result[0]}",
			reply_markup=a.gen_off_on_subject_but()["on"])
		await Admin_FSM.set_status_on.set()
		await callbck.message.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–∏ üëâüèª/backüëàüèª")


async def set_status_off(callback: types.CallbackQuery, state=Admin_FSM.set_status_off):
	async with state.proxy() as data:
		data['subject_status'] = callback.data
<<<<<<< HEAD
	await callback.message.answer("–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å\–≤—ã–∫–ª—é—á–∏—Ç—å –∫—É—Ä—Å?", reply_markup=KB.yes_no)
=======
	await callback.message.edit_text("–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å\–≤—ã–∫–ª—é—á–∏—Ç—å –∫—É—Ä—Å?", reply_markup=KB.yes_no)
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
	await Admin_FSM.set_answer_off.set()


async def set_answer_off(callbck: types.CallbackQuery, state=Admin_FSM.set_answer_off):
	async with state.proxy() as data:
		data['answer'] = callbck.data
	if data['answer'] == 'ans_yes':
<<<<<<< HEAD
		a.update_subject_by_status('status', True, data['subject_status'])
		result = a.select_info_subject('status', 'subject', data['subject_status'])
		await callbck.message.answer(f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å!\n –¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–º–µ—Ç–∞ {data['subject_status']}: {result[0]}",reply_markup=a.gen_off_on_subject_but()["off"])
		await Admin_FSM.set_status_off.set()
		await callbck.message.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–∏ üëâüèª/backüëàüèª")
	else:
		a.update_subject_by_status('status', False, data['subject_status'])
		result = a.select_info_subject('status', 'subject', data['subject_status'])
		await callbck.message.answer(f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å!\n –¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–º–µ—Ç–∞ {data['subject_status']}: {result[0]}",reply_markup=a.gen_off_on_subject_but()["off"])
		await Admin_FSM.set_status_off.set()
		await callbck.message.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–∏ üëâüèª/backüëàüèª")

#–≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –¥–æ–º–æ–π
async def reg_as_stud(callback: types.CallbackQuery, state= Admin_FSM.cheking_data):
	result = a.join_select_info_users(callback.from_user.id)
	if result:
		await callback.message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤–Ω–æ–≤—å!", reply_markup=KB.stud_button)
		await User_FSM.main_buttons.set()
	else:
		await callback.message.edit_text("–í—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å? –ò—Å–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É –æ—à–∏–±–∫—É!")
		await callback.message.answer("–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–µ –§–ò–û. –ü—Ä–∏–º–µ—Ä –°–µ—Ä–≥–µ–π –°–µ—Ä–≥–µ–µ–≤ –°–µ—Ä–≥–µ–µ–≤–∏—á")
		await User_FSM.registration.set()

=======
		a.update_info_status('status', True, data['subject_status'])
		result = a.select_info_subject('status', 'subject', data['subject_status'])
		await callbck.message.edit_text(f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å!\n –¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–º–µ—Ç–∞ {data['subject_status']}: {result[0]}",reply_markup=a.gen_off_on_subject_but()["off"])
		await Admin_FSM.set_status_off.set()
		await callbck.message.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–∏ üëâüèª/backüëàüèª")
	else:
		a.update_info_status('status', False, data['subject_status'])
		result = a.select_info_subject('status', 'subject', data['subject_status'])
		await callbck.message.edit_text(f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å!\n –¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–º–µ—Ç–∞ {data['subject_status']}: {result[0]}",reply_markup=a.gen_off_on_subject_but()["off"])
		await Admin_FSM.set_status_off.set()
		await callbck.message.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–∏ üëâüèª/backüëàüèª")

>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339

def admin_hendlers():
	dp.register_message_handler(cmd_cancel, commands='cancel', state='*')
	dp.register_message_handler(back, commands='back', state=Admin_FSM.set_status_on)
	dp.register_message_handler(back, commands='back', state=Admin_FSM.set_status_off)
	dp.register_message_handler(menu, commands= 'menu', state=Admin_FSM.change_option)
	dp.register_message_handler(menu, commands= 'menu', state=Admin_FSM.set_subjects)
	dp.register_callback_query_handler(came_data, text='verification', state=Admin_FSM.catching_text)
	dp.register_message_handler(coming_text, state=Admin_FSM.cheking_data)
	dp.register_callback_query_handler(cours_type, state=Admin_FSM.course)
	dp.register_callback_query_handler(options, state=Admin_FSM.change_option)
	dp.register_callback_query_handler(cost_set, text='cost', state=Admin_FSM.type_set)
	dp.register_callback_query_handler(schedule_set, text='schedule', state=Admin_FSM.type_set)
	dp.register_callback_query_handler(room_set, text='room', state=Admin_FSM.type_set)
	dp.register_callback_query_handler(teacher_set, text='teacher', state=Admin_FSM.type_set)
	dp.register_callback_query_handler(comment_set, text='comment', state=Admin_FSM.type_set)
	dp.register_message_handler(cost_it, state=Admin_FSM.cost_it)
	dp.register_message_handler(schedule_it, state=Admin_FSM.schedule_it)
	dp.register_message_handler(room_it, state=Admin_FSM.room_it)
	dp.register_message_handler(teacher_it, state=Admin_FSM.teacher_it)
	dp.register_message_handler(comment_it, state=Admin_FSM.comment_it)
	dp.register_callback_query_handler(set_list, state=Admin_FSM.set_subjects)
	dp.register_callback_query_handler(set_status_on, state=Admin_FSM.set_status_on)
	dp.register_callback_query_handler(set_status_off, state=Admin_FSM.set_status_off)
	dp.register_callback_query_handler(set_answer_on, state=Admin_FSM.set_answer_on)
	dp.register_callback_query_handler(set_answer_off, state=Admin_FSM.set_answer_off)
<<<<<<< HEAD
	dp.register_callback_query_handler(reg_as_stud, text= 'stud', state=Admin_FSM.cheking_data)
=======
>>>>>>> d1e4d78f11005b874321d6c9f8c1f206c8ba8339
